#+TITLE: Words

* A one
application 
* B two
buffer
blog
bookmark 
** bae 
百度提供的删除语句 git rm * -r (所有东西删光光, 当然除了 .git 目录)

* C three
current
cycle
char
column
cursor
configurable
configuration
* D four
describe
disposable 
dictionary 
spacemacs
personal
identity
english
word
life
Documentation
* E five
equal
effect
emacs
emphasis
Element
* F six
first
features
fonts 
windows
File
space
TAB
manipulation
commands
start
with
open
file
using
your
save
all
taggle
tree
side
bar
using
neotree
show
current
absolute
path
in
the
minibuffer

* G seven
glossary
** git
git 文件中时间只是参考，只有哈希值为真
1. 要进入你的仓库
2. 主界面右边 settings
3. 进入设置页面后，一直下拉，会发现一个红色的危险区域
4. 找到此区域约右下角有个 delete，点击后会弹出确认页面
   要输入一次仓库名字来确认删除，这个蛮好，可有效防止错删。
5. 最后会提示删除成功。
* H eight
hybrid
help
highlighting
describe
char        
function    
key         
mode        
package     
system-info 
theme       
syntax      
briefly 
binding
Describe
position
interactively
point
and
the
after
Display
full
documentation
FUNCTION
symbol
function invoked by KEY.                
Display documentation of current major mode and minor modes.         
                                                                     
Check the *Messages* buffer if you need to review it                 
                                                                     
Display the full documentation of VARIABLE (a symbol).               
helm
command
apropos
super-apropos

* I nine
INTRODUCTION
insertion
insert
index
Identit
indent
* J ten
* K eleven
* L twelve
leader
lossage
* M thirteen
manage
mode
markdown 
revert
minor
generate
preview
content
render
region
* N fourteen

* O fifteen
object
other
outline spc s l
emphasize
emphasis 
org-present must be activated explicitly by typing: SPC : org-present
Binding	Description
previous slide
next slide
quit
** org
<dotspacemacs-major-mode-leader-key>
Org-repo-todo
SPC m g t	ort/goto-todos
T 怎么大写 T 直接 TODO
c-c c-d 输入日期
a-ret 下行出行同级列表或大纲
s-右箭头会切换列表显示的不同列表号
SPC s l	spacemacs/jump-in-buffer (jump to a heading)
org with evil-org-mode 
c-j 含当前光标分断成新行行
*** 还没弄懂的
| SPC m x s | 	make region strike-through |

**** org-edit-special related
|-------------+-------------------------+--------------------------------|
| spc m f     | 	org-set-effort        | ?:PROPERTIES:                  |
| spc m C-S-l | 	org-shiftcontrolright |                                |
| spc m C-S-h | 	org-shiftcontrolleft  |                                |
| spc m C-S-j | 	org-shiftcontroldown  | ??Switch to previous TODO set. |
| spc m C-S-k | 	org-shiftcontrolup    |                                |
* P sixteen
Presentation
package
publish
percent
prefix
prefixion
PageDown
PageUp
plugs
pipe
* Q seveteen

* R eighteen
read
readme
* S nineteen 
skill
[[http://emacsist.com/10001Emacs][简化按键利器 hydra]]
skills web
shorcuts
scratch
scroll
sentence
** spacemacs
a-i 插入空格或制表符
plugs 
elisp 
spc i ikIK
:[number]：跳转到制定行
normal and insert 状态下 a-ret e 后会出现 command buffer
c-x c-e 出现在 minibuffer sexp->symbol expression
c-j eval-print-last-sexp (lisp-state-eval-sexp-end-of-line)
->eval
后等于新出二行，第一行是值，第二行是空行的行首比如 space p p，就是打开工程，s
pace p f 就是打开工程中的文件，space f f 就是直接打开文件，space g g 就是打开
magit buffer，而 space g s 就是 git 的 stage。

1.3 搜索和替换
\：

\searchWord：输入搜索内容，n 向下搜索，N 向上搜索。

%：在各种括号跳转。

:s/old/new：替换第一个匹配；:s/old/new/g：替换当前行匹配；:#,#s/old/new/g：替换行（#为行号）之间匹配；:%s/old/new/g：替换全文匹配。

:%s/old/new/gc：替换全文匹配，每一个匹配会提示是否匹配（输入 y 表示执行替换，n 表示跳过匹配）。
* T twenty
temp
tip
table
tree
* U twenty-one
undo
* V twenty-two
vert
variable    
view
* W twenty-three
where
** web map 
[[file+emacs:c:/Users/Administrator/skills_web/emacs/spacemacs.org][spacemacs]]
[[https://github.com/zhuatw][zhuatw be github.com]]

* X twenty-four

* Y twenty-five
yank

* Z twenty-six

* text 
n|	移至第 n 个字元(栏)处。注意，要用 Shift 键。n 是从头起算的。
这和 不一样，内文内容并未动，只是光标在动而已。 |
:n	移至第 n 行行首。或 nG。
** other edit command 
| key | pre | insert | object | effect  | describe   |
| r   |     | yes/no | char   | current | disposable |
| R   |     |        |        |         |            |
| u   |     |        |        | uodo    |            |
| c-r |     |        |        | redo    |            |
|     |     |        |        |         |            |
 
*** find
f 加上一个字符的命令，这里的 f 表示“find”,比如 fx 表示在当
前位置向下定位到第一个 x 所在的位置。 
F 加一个字符表示向左搜索。
n evil-search-next
*** magit git-bash
test and text 
*** t be to
是“to”的简写，比如
tx 表示向右寻找第一个 x 所在的位置，但是它不是把光标停留
在被搜索的字符上，而是在它之前的前一个字符上。小写的 t
表示向右搜索，大写的 T 表示向左搜索。 
据了两行的空间，但是在逻辑上它们是一行，因为它们之间不
包括任何的换行符。 
*** 50%
命令来跳转到文件的中间位置，用 80%命令跳转到文件的百分之八十的位置
*** table
s-tab 对齐和向上个单元格
** temp notes
*** 最短无二义前缀
如果需要输入某个事物的名称，而这个名称是有限个数的可能性中的一种，Emacs 就能在输
入可能最少个数的字符后判断出想输入的是什么
忽略一些不用的文件名后缀示例 page518
L end of line  
key  pre   insert  object effect   describe 
hjkl,right up down left,pre 
hybrid enabled disabled glossaries, follow me,
font sessio
text object, purview whole
fold level fold method  <SPC> : config-system/create-layer RET
** Symbols
| <SPC> s l   | To list all the symbols of a buffer press:                    |
| <SPC> s e   | edit all occurrences of the current symbol                    |
| <SPC> s e   | edit all occurrences of the current symbol                    |
| <SPC> s s   | initiate navigation micro-state                               |
| <SPC> s n   | go to next occurrence and initiate navigation micro-state     |
| <SPC> s N   | go to previous occurrence and initiate navigation micro-state |
| <SPC> s c d | change range to display area                                  |
| <SPC> s c f | hange range to function                                       |
| <SPC> s C   | change range to default (whole buffer)                        |
| <SPC> s c b | change range to whole buffer                                  |
| <SPC> t s   | taggle the auto highlighting                                  |
| <SPC> t s   | taggle the auto highlighting                                  |
出现一个列表缓冲区，是以有 * 来提取的，可输入关键字来搜索 ret 后光标就到此处
** .spacemacs.d/
(defun dotspacemacs/user-config ()
(server-start);;自已的配置放到这里 
)
** 多光标编辑
需要进入 iedit 模式, 此时光标变成红色, 步骤如下:
用 vim 的 visul 模式选取要 replace 的值
按<spc> s e 选取全部的匹配值(暂时不知怎么自定义选取)
按 S 对值删除并进行修改
按 ESC ESC 退出
* learning Gnu Emacs 
** 11 chapter
function-name arguments 
(forward-word 1)
emacs -q and emacs -u username
self-insert-command
esc x command-name RETURN retur 
keymap global-map local-map
ctrl-x-map esc-map esc-prefix
1. 11-352
     define-key deymap "keystroke" 'command-name
2. global-set-key "keystroke" 'command-name
     define-key ctrl-x-map "l" 'goto-line
     define-key global-map "\c-xl" 'goto-line
     global-set-key "\c-xl" 'goto-line
local-set-key "keystroke" 'command-name
表 11-1:特殊字符转义表 355
** temp command 
help-command
backward-char
kill-word
goto-line
quoted-insert 11-357 application mode
apropos
describe-function c-h-f
** config example
setq 是常用的，当这个不起作用时，有个更高级是 setq-default 379
setq auto-save-interval 800
setq left-margin 4
setq case-fold-search nil
autoload 'function "filename"
autoload 'ada-mode "ada"
(setq auto-mode-alist (cons '(* .a$" . ada-mode) auto-mode-alist))
** variable
- 字符串值在双引号里
- 字符值用 pre  ?
- 符号值用单引号 never
** 13 chapter 
431 defun
(interactive "prompt-string")
defun count-word-buffer 434 
与编辑缓冲区和文本有关的基本函数（表：13-4)page440
** 正则表达式 page441
** 主编辑模式实例 
